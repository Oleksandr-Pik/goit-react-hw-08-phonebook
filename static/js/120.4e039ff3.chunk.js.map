{"version":3,"file":"static/js/120.4e039ff3.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Container/Container.styled.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 300px;\n  margin: 0 auto;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  /* outline: 1px solid; */\n  padding: 30px;\n  /* padding: 4px 14px; */\n  border: 1px solid rgb(226, 229, 232);\n  border-radius: 12px;\n  box-shadow: 10px 10px 5px -7px rgb(164, 164, 164);\n  background-color: #f6f8fa;\n  margin-bottom:30px;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  margin-bottom: 20px;\n  padding: 4px 14px;\n  border-radius: 5px;\n  transition: all 0.3s ease-out;\n\n  &:hover,\n  &:focus {\n    border: 2px solid #fabb18;\n    outline: none;\n  }\n`;\n\nexport const Button = styled.button`\n  margin: 0 auto;\n  width: fit-content;\n  cursor: pointer;\n`;\n","export const selectContactsList = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectContactsFilter = state => state.filter;","import { useState } from 'react';\nimport { Button, Wrapper, Form, Input } from './ContactForm.styled';\n\nimport { toast } from 'react-hot-toast';\nimport { addContact } from '../../redux/contacts/operations';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContactsList,\n  selectIsLoading,\n} from '../../redux/contacts/selectors';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n  const isFetching = useSelector(selectIsLoading);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleAddContact = data => {\n    if (isContactAlreadyExist(contacts, data)) {\n      toast.error(`${data.name} is already in contact`);\n      return;\n    }\n    dispatch(addContact(data));\n    toast.success('Create new contact successfully');\n  };\n\n  const isContactAlreadyExist = (contacts, data) => {\n    return contacts.find(contact => contact.name === data.name);\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const createContact = e => {\n    e.preventDefault();\n    handleAddContact({\n      name,\n      number,\n    });\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Wrapper>\n      <Form onSubmit={createContact}>\n        <label htmlFor=\"name\">Name</label>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          required\n          onChange={handleChange}\n          placeholder=\"Enter name\"\n          value={name}\n        />\n        <label htmlFor=\"number\">Number</label>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          id=\"number\"\n          required\n          onChange={handleChange}\n          placeholder=\"Enter number\"\n          value={number}\n        />\n        <Button type=\"submin\" disabled={isFetching}>\n          Add contact\n        </Button>\n      </Form>\n    </Wrapper>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\nimport { FaUser, FaPhoneAlt } from 'react-icons/fa';\n\nexport const Wrapper = styled.div`\n  /* margin: 0 auto; */\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 10px;\n  padding: 25px;\n  height: 150px;\n  width: 300px;\n  border: 1px solid rgb(226, 229, 232);\n  border-radius: 12px;\n  box-shadow: 10px 10px 5px -7px rgb(164, 164, 164);\n  background-color: #f6f8fa;\n  /* margin-bottom: 20px; */\n`;\n\nexport const UserIcon = styled(FaUser)`\n  padding: 3px;\n  width: 20px;\n  height: 20px;\n  fill: #fabb18;\n  /* border-radius: 12px; */\n  background-color: rgba(250, 187, 24, 0.1);\n`;\n\nexport const PhoneIcon = styled(FaPhoneAlt)`\n  padding: 3px;\n  width: 20px;\n  height: 20px;\n  fill: #fabb18;\n  /* border-radius: 12px; */\n  background-color: rgba(250, 187, 24, 0.1);\n`;\n\nexport const Button = styled.button`\n  /* width: fit-content;\n  margin-left:auto;\n  margin-right: auto */\n`;\n\n","import React from 'react';\nimport { Wrapper, PhoneIcon, UserIcon, Button } from './ContactListItem.styled';\nimport { toast } from 'react-hot-toast';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoading } from '../../redux/contacts/selectors';\n\nconst ContactListItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  const isFetching = useSelector(selectIsLoading);\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n    toast.error('Delete contact successfully');\n  };\n\n  return (\n    <Wrapper>\n      <p>\n        <UserIcon /> {contact.name}\n      </p>\n      <p>\n        <PhoneIcon /> {contact.number}\n      </p>\n      <Button\n        onClick={() => handleDeleteContact(contact.id)}\n        disabled={isFetching}\n      >\n        Delete\n      </Button>\n    </Wrapper>\n  );\n};\n\nexport default ContactListItem;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  /* max-width: 1300px; */\n  /* margin-left: auto; */\n  /* margin-right: auto; */\n  justify-content: center;\n\n  /* display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: 24px; */\n`;\n\nexport const ListItem = styled.li`\n  /* margin-left: auto;\n  margin-right: auto; */\n`;\n","import React from 'react';\nimport ContactListItem from 'components/ContactListItem';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContactsList,\n  selectContactsFilter,\n  selectIsLoading,\n  selectError,\n} from '../../redux/contacts/selectors';\n\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../../redux/contacts/operations';\nimport { Spinner } from 'components/Spinner/Spinner';\nimport { List, ListItem } from './ContactList.styled';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(selectContactsList);\n  const filter = useSelector(selectContactsFilter);\n  const isFetching = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    console.log('contacts', contacts);\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <>\n      {isFetching && <Spinner size={36} />}\n      {error && (\n        <p>\n          Oops, something went wrong! <p>${error}</p>\n        </p>\n      )}\n      {visibleContacts.length > 0 ? (\n        <List>\n          {visibleContacts.map(contact => (\n            <ListItem key={contact.id}>\n              <ContactListItem\n                contact={contact}\n              />\n            </ListItem>\n          ))}\n        </List>\n      ) : (\n        <p>No contacts</p>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled.input`\n  width: 300px;\n  /* margin-bottom: 20px; */\n  padding: 4px 14px;\n  border-radius: 5px;\n  transition: all 0.3s ease-out;\n;\n  &:hover,\n  &:focus {\n    border: 2px solid #fabb18;\n    outline: none;\n  }\n`;\n","import React from 'react';\nimport { Input, Label } from './Filter.styled';\nimport { setFilter } from '../../redux//filter/filterSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContactsFilter } from '../../redux/contacts/selectors';\n\nconst Filter = () => {\n  const filter = useSelector(selectContactsFilter);\n\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <Label>\n      Find contact by name\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        placeholder=\"Enter contact name\"\n        onChange={changeFilter}\n      />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 14px;\n`;\n","import React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport { Container } from 'components/Container/Container.styled';\n// import { Container } from 'components/ContactListItem/ContactListItem.styled';\n// import { Container } from './App.styled';\n\nexport default function Contacts() {\n  return (\n    <div>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n\n      <ContactForm />\n      <Container>\n        <h2>Contacts list</h2>\n\n        <Filter />\n\n        <ContactList />\n      </Container>\n    </div>\n  );\n}\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","Form","_templateObject2","Input","_templateObject3","Button","_templateObject4","selectContactsList","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectContactsFilter","filter","ContactForm","dispatch","useDispatch","useSelector","isFetching","name","setName","useState","number","setNumber","isContactAlreadyExist","data","find","contact","handleChange","event","value","target","_jsx","children","_jsxs","onSubmit","e","preventDefault","toast","concat","addContact","htmlFor","type","id","required","onChange","placeholder","disabled","UserIcon","FaUser","PhoneIcon","FaPhoneAlt","_ref","onClick","handleDeleteContact","contactId","deleteContact","List","ListItem","ContactList","useEffect","fetchContacts","visibleContacts","getVisibleContacts","normalizedFilter","toLowerCase","console","log","toLocaleLowerCase","includes","_Fragment","Spinner","size","length","map","ContactListItem","Label","Filter","setFilter","Container","Contacts","Helmet"],"sourceRoot":""}
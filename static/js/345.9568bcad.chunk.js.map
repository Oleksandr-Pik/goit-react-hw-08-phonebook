{"version":3,"file":"static/js/345.9568bcad.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/Spinner/Spinner.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  /* outline: 1px solid; */\n  padding: 30px;\n  /* padding: 4px 14px; */\n  border: 1px solid rgb(226, 229, 232);\n  border-radius: 12px;\n  box-shadow: 10px 10px 5px -7px rgb(164, 164, 164);\n  background-color: #f6f8fa;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  margin-bottom: 20px;\n  padding: 4px 14px;\n  border-radius: 5px;\n  transition: all 0.3s ease-out;\n\n  &:hover,\n  &:focus {\n    border: 2px solid #fabb18;\n    outline: none;\n  }\n`;\n\nexport const Button = styled.button`\n  width: fit-content;\n  cursor: pointer;\n`;\n","export const selectContactsList = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectContactsFilter = state => state.filter;","import { useState } from 'react';\nimport { Button, Form, Input } from './ContactForm.styled';\n\nimport { toast } from 'react-hot-toast';\nimport { addContact } from '../../redux/contacts/operations';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContactsList, selectIsLoading } from '../../redux/selectors';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n  const isFetching = useSelector(selectIsLoading);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleAddContact = data => {\n    if (isContactAlreadyExist(contacts, data)) {\n      toast.error(`${data.name} is already in contact`);\n      return;\n    }\n    dispatch(addContact(data));\n    toast.success('Create new contact successfully');\n  };\n\n  const isContactAlreadyExist = (contacts, data) => {\n    return contacts.find(contact => contact.name === data.name);\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const createContact = e => {\n    e.preventDefault();\n    handleAddContact({\n      name,\n      number,\n    });\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={createContact}>\n      <label htmlFor=\"name\">Name</label>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        id=\"name\"\n        required\n        onChange={handleChange}\n        placeholder=\"Enter name\"\n        value={name}\n      />\n      <label htmlFor=\"number\">Number</label>\n      <Input\n        type=\"tel\"\n        name=\"number\"\n        id=\"number\"\n        required\n        onChange={handleChange}\n        placeholder=\"Enter number\"\n        value={number}\n      />\n      <Button type=\"submin\" disabled={isFetching} >Add contact</Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: auto;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 15px;\n`;\n","import React from 'react';\nimport { Container } from './ContactListItem.styled';\nimport { toast } from 'react-hot-toast';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoading } from '../../redux/selectors';\n\nconst ContactListItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  const isFetching = useSelector(selectIsLoading);\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n    toast.error('Delete contact successfully');\n  };\n\n  return (\n    <Container>\n      <p>\n        {contact.name}: {contact.number}{' '}\n      </p>\n      <button onClick={() => handleDeleteContact(contact.id)} disabled={isFetching}>\n        {/* {isFetching && <Spinner size={12} />} */}\n        Delete\n      </button>\n    </Container>\n  );\n};\n\nexport default ContactListItem;\n","import styled from 'styled-components';\nimport { keyframes } from 'styled-components';\nimport { CgSpinner } from 'react-icons/cg';\n\nconst spin = keyframes`\n0% {\n  transform: rotate(0deg);\n}\n\n100% {\n  transform: rotate(1turn);\n}\n`;\n\nexport const Spinner = styled(CgSpinner)`\n  animation: ${spin} 1s linear infinite;\n`;\n","import React from 'react';\nimport ContactListItem from 'components/ContactListItem';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContactsList,\n  selectContactsFilter,\n  selectIsLoading,\n  selectError,\n} from '../../redux/selectors';\n\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../../redux/contacts/operations';\nimport { Spinner } from 'components/Spinner/Spinner';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(selectContactsList);\n  const filter = useSelector(selectContactsFilter);\n  const isFetching = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    console.log('contacts', contacts);\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <>\n      {isFetching && <Spinner size={36} />}\n      {error && (\n        <p>\n          Oops, something went wrong! <p>${error}</p>\n        </p>\n      )}\n      {visibleContacts.length > 0 ? (\n        <ul>\n          {visibleContacts.map(contact => (\n            <li key={contact.id}>\n              <ContactListItem\n                contact={contact}\n                // onDeleteContact={handleDeleteContact}\n              />\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No contacts</p>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  /* margin-bottom: 20px; */\n  padding: 4px 14px;\n  border-radius: 5px;\n  transition: all 0.3s ease-out;\n;\n  &:hover,\n  &:focus {\n    border: 2px solid #fabb18;\n    outline: none;\n  }\n`;\n","import React from 'react';\nimport { Input, Label } from './Filter.styled';\nimport { setFilter } from '../../redux//filter/filterSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContactsFilter } from '../../redux/selectors';\n\nconst Filter = () => {\n  const filter = useSelector(selectContactsFilter);\n\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <Label>\n      Find contact by name\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        placeholder=\"Enter contact name\"\n        onChange={changeFilter}\n      />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\n// import { Container } from './App.styled';\n\nexport default function Contacts() {\n  return (\n    <>\n      <div>\n        <Helmet>\n          <title>Contacts</title>\n        </Helmet>\n        <h1>Phonebook</h1>\n        <ContactForm />\n\n        <h2>Contacts</h2>\n        <Filter />\n\n        <ContactList />\n      </div>\n    </>\n  );\n}\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Input","_templateObject2","Button","_templateObject3","selectContactsList","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectContactsFilter","filter","ContactForm","dispatch","useDispatch","useSelector","isFetching","name","setName","useState","number","setNumber","isContactAlreadyExist","data","find","contact","handleChange","event","value","target","_jsxs","onSubmit","e","preventDefault","toast","concat","addContact","children","_jsx","htmlFor","type","id","required","onChange","placeholder","disabled","Container","_ref","onClick","handleDeleteContact","contactId","deleteContact","spin","keyframes","Spinner","CgSpinner","ContactList","useEffect","fetchContacts","visibleContacts","getVisibleContacts","normalizedFilter","toLowerCase","console","log","toLocaleLowerCase","includes","_Fragment","size","length","map","ContactListItem","Label","Filter","setFilter","Contacts","Helmet"],"sourceRoot":""}